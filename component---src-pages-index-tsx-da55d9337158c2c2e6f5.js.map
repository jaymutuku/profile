{"version":3,"sources":["webpack:///./src/components/ui/Button/styles.js","webpack:///./src/components/ui/Button/index.js","webpack:///./src/components/ui/Banner/styles.js","webpack:///./src/components/ui/Banner/index.js","webpack:///./src/components/HeroBanner/index.js","webpack:///./src/components/Services/styles.js","webpack:///./src/components/Services/index.js","webpack:///./src/pages/index.tsx"],"names":["Button","motion","custom","styled","button","primary","block","children","whileHover","scale","whileTap","Banner","section","Content","p","title","subtitle","content","linkTo","linkText","Container","TitleSection","to","HeroBanner","heroBanner","useStaticQuery","markdownRemark","frontmatter","Services","div","ServiceItem","allMarkdownRemark","sectionTitle","services","edges","center","map","item","node","id","icon","description","key","InfoBlock","IndexPage","Layout","SEO"],"mappings":"wLAIaA,E,UAASC,EAAOC,OAAOC,IAAOC,OAArB,qEAAcD,CAAd,yCAEhB,gKAEF,qBAAGE,QAA2B,4BAAkB,qBAEhD,qBAAGC,OAAuB,mBCOfN,EAZA,SAAC,GAAD,IAAGK,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,SAAnB,OACb,kBAAC,EAAD,CAAeF,QAASA,EAASC,MAAOA,EAAOE,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,MAC5FF,I,YCJQI,EAASR,IAAOS,QAAV,iEAAGT,CAAH,SACb,2EAGOU,EAAUV,IAAOW,EAAV,kEAAGX,CAAH,SACd,uBCsBSQ,EApBA,SAAC,GAAD,IAAGI,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,SAArC,OACb,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,SAAO,GAChB,kBAACS,EAAA,EAAD,CAAcN,MAAOA,EAAOC,SAAUA,IACtC,kBAAC,EAAD,KAAiBC,GACjB,kBAAC,OAAD,CAAMK,GAAIJ,GACR,kBAAC,EAAD,CAAQb,SAAO,GAAEc,OC0BVI,EApCI,WAAO,IAelBC,EAdqBC,yBAAe,aAAlCC,eAc0BC,YAElC,OACE,kBAAC,EAAD,CACEZ,MAAOS,EAAWT,MAClBC,SAAUQ,EAAWR,SACrBC,QAASO,EAAWP,QACpBC,OAAQM,EAAWN,OACnBC,SAAUK,EAAWL,Y,YC1BdS,EAAWzB,IAAO0B,IAAV,mEAAG1B,CAAH,SACf,+EAGO2B,EAAc3B,IAAO0B,IAAV,sEAAG1B,CAAH,SAClB,0DCiDSyB,EAhDE,WAAO,IAAD,EACyBH,yBAAe,cAArDC,EADa,EACbA,eAAgBK,EADH,EACGA,kBAuBlBC,EAAeN,EAAeC,YAC9BM,EAAWF,EAAkBG,MAEnC,OACE,kBAACd,EAAA,EAAD,CAAWR,SAAO,GAChB,kBAACS,EAAA,EAAD,CAAcN,MAAOiB,EAAajB,MAAOC,SAAUgB,EAAahB,SAAUmB,QAAM,IAChF,kBAAC,EAAD,KACGF,EAASG,KAAI,SAACC,GAAU,IAAD,EAIlBA,EAAKC,KAFPC,EAFoB,EAEpBA,GAFoB,IAGpBZ,YAAeZ,EAHK,EAGLA,MAAOyB,EAHF,EAGEA,KAAMC,EAHR,EAGQA,YAG9B,OACE,kBAAC,EAAD,CAAoBC,IAAKH,GACvB,kBAACI,EAAA,EAAD,CAAWH,KAAMA,EAAMzB,MAAOA,EAAOE,QAASwB,WC/B7CG,UAVa,WAC1B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/B,MAAM,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"component---src-pages-index-tsx-da55d9337158c2c2e6f5.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\nimport { motion } from 'framer-motion';\n\nexport const Button = motion.custom(styled.button`\n  outline: none !important;\n  ${tw`py-2 px-8 rounded-full border border-pink-500 text-white`};\n\n  ${({ primary }) => (primary ? tw`bg-pink-500` : tw`text-pink-500`)};\n\n  ${({ block }) => block && tw`w-full`};\n`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Styled from './styles';\n\nconst Button = ({ primary, block, children }) => (\n  <Styled.Button primary={primary} block={block} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n    {children}\n  </Styled.Button>\n);\n\nButton.propTypes = {\n  primary: PropTypes.bool,\n  block: PropTypes.bool,\n  children: PropTypes.any.isRequired\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Banner = styled.section`\n  ${tw`bg-gray-100 border-b border-indigo-100 `};\n`;\n\nexport const Content = styled.p`\n  ${tw`mb-8`};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport Button from 'components/ui/Button';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\nconst Banner = ({ title, subtitle, content, linkTo, linkText }) => (\n  <Styled.Banner>\n    <Container section>\n      <TitleSection title={title} subtitle={subtitle} />\n      <Styled.Content>{content}</Styled.Content>\n      <Link to={linkTo}>\n        <Button primary>{linkText}</Button>\n      </Link>\n    </Container>\n  </Styled.Banner>\n);\n\nBanner.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  content: PropTypes.any.isRequired,\n  linkTo: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired\n};\n\nexport default Banner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Banner from 'components/ui/Banner';\n\nconst HeroBanner = () => {\n  const { markdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"hero section\" } }) {\n        frontmatter {\n          title\n          subtitle\n          content\n          linkTo\n          linkText\n        }\n      }\n    }\n  `);\n\n  const heroBanner = markdownRemark.frontmatter;\n\n  return (\n    <Banner\n      title={heroBanner.title}\n      subtitle={heroBanner.subtitle}\n      content={heroBanner.content}\n      linkTo={heroBanner.linkTo}\n      linkText={heroBanner.linkText}\n    />\n  );\n};\n\nHeroBanner.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  linkTo: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired\n};\n\nexport default HeroBanner;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Services = styled.div`\n  ${tw`flex flex-wrap -mx-3`};\n`;\n\nexport const ServiceItem = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\nconst Services = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"services section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"services\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              description\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const services = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Services>\n        {services.map((item) => {\n          const {\n            id,\n            frontmatter: { title, icon, description }\n          } = item.node;\n\n          return (\n            <Styled.ServiceItem key={id}>\n              <InfoBlock icon={icon} title={title} content={description} />\n            </Styled.ServiceItem>\n          );\n        })}\n      </Styled.Services>\n    </Container>\n  );\n};\n\nexport default Services;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport HeroBanner from 'components/HeroBanner';\nimport Services from 'components/Services';\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"About Me\" />\n      <HeroBanner />\n      <Services />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}